<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cocoa-ziyue的技术博客</title>
  
  <subtitle>一个全栈coder折腾的小窝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-14T04:55:34.384Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>cocoa-ziyue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS开源项目之支持WKWebView的Hybrid开源框架GPHybrid</title>
    <link href="http://yoursite.com/2018/04/14/iOS%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%94%AF%E6%8C%81WKWebView%E7%9A%84Hybrid%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6GPHybrid/"/>
    <id>http://yoursite.com/2018/04/14/iOS开源项目之支持WKWebView的Hybrid开源框架GPHybrid/</id>
    <published>2018-04-14T04:53:29.000Z</published>
    <updated>2018-04-14T04:55:34.384Z</updated>
    
    <content type="html"><![CDATA[<h1 id="支持WKWebView的Hybrid框架GPHybrid"><a href="#支持WKWebView的Hybrid框架GPHybrid" class="headerlink" title="支持WKWebView的Hybrid框架GPHybrid"></a><center>支持WKWebView的Hybrid框架GPHybrid</center></h1><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hybrid框架主要以JS+Native两者相互调用为主，从开发层面实现&quot;一次开发，多处运行&quot;的机制，成为真正适合跨平台的开发。  </span><br><span class="line">目前已经有众多Hybrid App开发成功应用，比如百度、网易等知名移动应用，都是采用Hybrid App开发模式。  </span><br><span class="line">因此GPHybird实现了JS+Native无缝调用、常见网页处理功能、常见客户端处理功能。实现UIWebview和WKWebView根据操作系统自动适应。  </span><br><span class="line">在iOS8+的设备上,使用WKWebView并封装了常见的功能接口，使用起来简单稳定。</span><br></pre></td></tr></table></figure><h3 id="架构思维导图"><a href="#架构思维导图" class="headerlink" title="架构思维导图"></a>架构思维导图</h3><p><img src="https://github.com/ziyue92/folder/raw/master/GPHybird模块介绍.png" alt="GPHybrid模块组成介绍"></p><h3 id="使用介绍思维导图"><a href="#使用介绍思维导图" class="headerlink" title="使用介绍思维导图"></a>使用介绍思维导图</h3><p><img src="https://github.com/ziyue92/folder/raw/master/GPHybrid使用指南.png" alt="GPHybrid使用介绍"></p><h3 id="如何运行项目"><a href="#如何运行项目" class="headerlink" title="如何运行项目"></a>如何运行项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下载源码，解压。  </span><br><span class="line">打开终端，cd到主目录下的Example。  </span><br><span class="line">例如：cd /Users/gangpengshu/Downloads/GPHybrid-master/Example  </span><br><span class="line">执行：pod install  </span><br><span class="line">commadn+R运行项目</span><br><span class="line">可以看到如下界面:</span><br></pre></td></tr></table></figure><p><img src="https://github.com/ziyue92/folder/raw/master/Simulator_Screen_01.png" alt="截图">  </p><p><code>success!</code></p><h3 id="常见功能详解"><a href="#常见功能详解" class="headerlink" title="常见功能详解"></a>常见功能详解</h3><h4 id="1-使用vc加载h5网页，只需继承GPWebViewController，调用如下方法，一句代码就完成了网页加载。"><a href="#1-使用vc加载h5网页，只需继承GPWebViewController，调用如下方法，一句代码就完成了网页加载。" class="headerlink" title="1.使用vc加载h5网页，只需继承GPWebViewController，调用如下方法，一句代码就完成了网页加载。"></a>1.使用vc加载h5网页，只需继承GPWebViewController，调用如下方法，一句代码就完成了网页加载。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//1.1 简单url(NSString)</span><br><span class="line">[self loadWebViewWithUrlStr:@&quot;https://www.baidu.com&quot;];</span><br><span class="line">//1.2 简单request(NSMutableURLRequest)</span><br><span class="line">NSMutableURLRequest *request = [[NSMutableURLRequest alloc] initWithURL:[NSURL URLWithString:@&quot;https://www.baidu.com&quot;]];</span><br><span class="line">[self loadWebViewWithUrlRequest:request];</span><br><span class="line">//1.3 简单request(NSMutableURLRequest带header，或body)</span><br><span class="line">NSMutableURLRequest *request = [[NSMutableURLRequest alloc] initWithURL:[NSURL URLWithString:@&quot;https://www.baidu.com&quot;]];</span><br><span class="line">[request addValue:@&quot;en_us&quot; forHTTPHeaderField:@&quot;lang&quot;];</span><br><span class="line">[self loadWebViewWithUrlRequest:request];</span><br></pre></td></tr></table></figure><h4 id="2-异步获取标题"><a href="#2-异步获取标题" class="headerlink" title="2.异步获取标题"></a>2.异步获取标题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@weakify(self);</span><br><span class="line">self.getWebVTitle = ^(NSString *title) &#123;</span><br><span class="line">     @strongify(self);</span><br><span class="line">     [self p_setTopTitleDetail:@&#123;Nav_Title:title&#125;.mutableCopy];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="3-异步实时获取当前请求的url"><a href="#3-异步实时获取当前请求的url" class="headerlink" title="3.异步实时获取当前请求的url"></a>3.异步实时获取当前请求的url</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@weakify(self);</span><br><span class="line">self.getWebVUrl = ^(NSString *url) &#123;</span><br><span class="line">     @strongify(self);</span><br><span class="line">     do sth...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="4-刷新"><a href="#4-刷新" class="headerlink" title="4.刷新"></a>4.刷新</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[self refresh];</span><br></pre></td></tr></table></figure><h4 id="5-返回上一级（自动判断是退出vc，还是回退网页）"><a href="#5-返回上一级（自动判断是退出vc，还是回退网页）" class="headerlink" title="5.返回上一级（自动判断是退出vc，还是回退网页）"></a>5.返回上一级（自动判断是退出vc，还是回退网页）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[self goBack];</span><br></pre></td></tr></table></figure><h4 id="6-设置cookie"><a href="#6-设置cookie" class="headerlink" title="6.设置cookie"></a>6.设置cookie</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//设置cookies</span><br><span class="line">NSString *doMainstring = @&quot;.baidu.com&quot;;</span><br><span class="line">self.cookies = @&#123;@&quot;Token&quot;:@&quot;xxxxxxx&quot;,@&quot;Lang&quot;:@&quot;en_us&quot;,@&quot;Domain&quot;:doMainstring,@&quot;source&quot;:@&quot;ios&quot;&#125;;</span><br><span class="line">[self.uiWebView addCookieswithDict:self.cookies.mutableCopy];</span><br></pre></td></tr></table></figure><h4 id="7-JS与OC交互"><a href="#7-JS与OC交互" class="headerlink" title="7.JS与OC交互"></a>7.JS与OC交互</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//7.1 JS调用OC，OC注册JS事件，OC响应数据。</span><br><span class="line">[self.bridge registerHandler:@&quot;findAllmgs&quot; handler:^(id data, WVJBResponseCallback responseCallback) &#123;</span><br><span class="line">        if ([data isKindOfClass:[NSArray class]]) &#123;</span><br><span class="line">            @strongify(self);</span><br><span class="line">            self.imgArr = (NSArray *)data;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;];</span><br><span class="line">//7.2 OC调用JS，OC执行JS事件，JS响应数据。</span><br><span class="line">[self.wkWebView.wkWebView evaluateJavaScript:javascript completionHandler:^(id _Nullable result, NSError * _Nullable error) &#123;</span><br><span class="line">       CGFloat webHeight = [result floatValue];</span><br><span class="line">       self.commentTableView.emheaderHeight = webHeight;</span><br><span class="line">       [self updatewebViewHeight:webHeight];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><h4 id="8-只使用UIWebview"><a href="#8-只使用UIWebview" class="headerlink" title="8.只使用UIWebview"></a>8.只使用UIWebview</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//注意此属性需要在[super viewDidLoad]之前设置</span><br><span class="line">self.isforceUseoldWebView = YES;</span><br><span class="line">[super viewDidLoad];</span><br></pre></td></tr></table></figure><h2 id="Mark"><a href="#Mark" class="headerlink" title="Mark"></a>Mark</h2><p>iOS开发交流群：674228487<br>欢迎关注我的博客：<a href="http://blog.csdn.net/u010670946" target="_blank" rel="noopener">Coder大鹏</a> </p><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><p>iOS7+</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>GPHybrid is available through <a href="http://cocoapods.org" target="_blank" rel="noopener">CocoaPods</a>. To install<br>it, simply add the following line to your Podfile:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod <span class="string">'GPHybrid'</span></span><br></pre></td></tr></table></figure><h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>ziyue92, <a href="mailto:ziyue92@qq.com" target="_blank" rel="noopener">ziyue92@qq.com</a></p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>GPHybrid is available under the MIT license. See the LICENSE file for more info.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;支持WKWebView的Hybrid框架GPHybrid&quot;&gt;&lt;a href=&quot;#支持WKWebView的Hybrid框架GPHybrid&quot; class=&quot;headerlink&quot; title=&quot;支持WKWebView的Hybrid框架GPHybrid&quot;&gt;&lt;/a&gt;&lt;c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS开源项目之支持全屏侧滑导航控制器GPNavigationController</title>
    <link href="http://yoursite.com/2018/04/14/iOS%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%94%AF%E6%8C%81%E5%85%A8%E5%B1%8F%E4%BE%A7%E6%BB%91%E5%AF%BC%E8%88%AA%E6%A0%8F-%E5%AE%8C%E5%85%A8%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    <id>http://yoursite.com/2018/04/14/iOS开源项目之支持全屏侧滑导航栏-完全自定义/</id>
    <published>2018-04-14T04:11:02.000Z</published>
    <updated>2018-04-14T04:45:25.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="全屏侧滑导航-高度自定义-开源项目GPNavigationController"><a href="#全屏侧滑导航-高度自定义-开源项目GPNavigationController" class="headerlink" title="全屏侧滑导航(高度自定义)开源项目GPNavigationController"></a><center>全屏侧滑导航(高度自定义)开源项目GPNavigationController</center></h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>做了好几个项目，其中包括公司和个人项目。基本都是导航栏需要加入特效处理（比如侧滑渐变、上下滑渐变、高斯模糊等），还有一个比较重要的就是支持全屏侧滑手势。这时候需要自定义导航栏控制器+自定义导航栏。一般项目的基础UI架构都是NavigationController+TabbarController，若tabbar也需要高斯模糊，这时候也就是需要自定义TabbarController+自定义Tabbar。另外还需要普通控制器单个控制侧滑功能、单个控制导航栏的效果。结合这些特点，我写了一个支持以上功能的导航栏控制器的框架。已经上传到Pod，支持pod引用。下面大概说说这个框架的结构组成。</code></pre><h2 id="架构讲解"><a href="#架构讲解" class="headerlink" title="架构讲解"></a>架构讲解</h2><p>项目结构思维导图如下：<br><img src="http://ouls0ou71.bkt.clouddn.com/20170906135550596.png" alt="思维导图"></p><h2 id="项目介绍和使用"><a href="#项目介绍和使用" class="headerlink" title="项目介绍和使用"></a>项目介绍和使用</h2><p>开源项目的github地址为：<br><b><a href="https://github.com/ziyue92/GPNavigationController" target="_blank" rel="noopener">点击下载使用</a><br></b></p><p>支持Cocoapods安装<br><b> pod ‘GPNavigationController’ </b></p><hr><p>欢迎讨论和提issues。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;全屏侧滑导航-高度自定义-开源项目GPNavigationController&quot;&gt;&lt;a href=&quot;#全屏侧滑导航-高度自定义-开源项目GPNavigationController&quot; class=&quot;headerlink&quot; title=&quot;全屏侧滑导航(高度自定义)开
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS内存泄露监测和修复</title>
    <link href="http://yoursite.com/2018/04/13/iOS%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9B%91%E6%B5%8B%E5%92%8C%E4%BF%AE%E5%A4%8D/"/>
    <id>http://yoursite.com/2018/04/13/iOS内存泄露监测和修复/</id>
    <published>2018-04-13T08:05:00.000Z</published>
    <updated>2018-04-14T04:46:06.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iOS内存泄露监测和修复"><a href="#iOS内存泄露监测和修复" class="headerlink" title="iOS内存泄露监测和修复"></a><center>iOS内存泄露监测和修复<center></center></center></h1><h2 id="内存泄露的相关概念"><a href="#内存泄露的相关概念" class="headerlink" title="内存泄露的相关概念:"></a>内存泄露的相关概念:</h2><pre><code>如果程序运行时一直分配内存而不及时释放无用的内存，程序占用的内存越来越大，直到把系统分配给该APP的内存消耗殚尽，程序因无内存可用导致崩溃，这样的情况我们称之为内存泄漏。</code></pre><h2 id="内存泄露可能引发的问题"><a href="#内存泄露可能引发的问题" class="headerlink" title="内存泄露可能引发的问题:"></a>内存泄露可能引发的问题:</h2><pre><code>1)内存消耗殆尽的时候，程序会因没有内存被杀死，即crash。2)当内存快要用完的时候，会非常的卡顿。3)如果是ViewController没有释放掉，引起的内存泄露，还会引起其他很多问题，尤其是和通知相关的。没有被释放掉的ViewController还能接收通知，还会执行相关的动作，所以会引起各种各样的异常情况的发生。（这一点尤为重要，项目中重点关注）</code></pre><h2 id="常见的检测监测方法"><a href="#常见的检测监测方法" class="headerlink" title="常见的检测监测方法:"></a>常见的检测监测方法:</h2><pre><code>1.Analyze静态分析:通过静态分析我们可以最初步的了解到代码的一些不规范的地方和一些代码逻辑上的错误；2.Leaks，Xcode自带工具。3.MLeaksFinder，来自微信阅读团队的监测工具，比较精准。有友好的弹框提示，可以定位到相关的类和发生内存泄露的步骤。</code></pre><h2 id="常见循环引用："><a href="#常见循环引用：" class="headerlink" title="常见循环引用："></a>常见循环引用：</h2><pre><code> 1.NSTimer:创建定时器时,当前控制器引用而定时器了(为什么因引用定时器?后续要用到这个定时器对象),在给定时器添加任务时,定时器保留了self(当前控制器).这里就出现了循环引用.解决方法：控制器不再引用定时器(不太可能) ,定时器不再保留当前控制器(较为科学，直接停止掉即可)2.GCD计时器，使用GCD的定时器，要注意使用weakself。3.VC的内存泄露。解决方法：想要知道ViewController有没有被释放，一个方法就是可以通过看ViewController有没有执行dealloc方法。4.block内存泄露。解决方法：打断引用循环关系。5.delegate内存泄露。weak弱引用即可。6.NSNotification内存泄露：weak弱引用即可。</code></pre><hr><p>具体内存问题和解决方案可以查看github上面的讲解。<br><a href="https://github.com/cocoa-ziyue/LeaksResolve" target="_blank" rel="noopener">点击查看github</a><br>附上Demo地址，欢迎提出宝贵意见。<br><a href="https://github.com/cocoa-ziyue/LeaksResolve" target="_blank" rel="noopener">点击查看Demo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;iOS内存泄露监测和修复&quot;&gt;&lt;a href=&quot;#iOS内存泄露监测和修复&quot; class=&quot;headerlink&quot; title=&quot;iOS内存泄露监测和修复&quot;&gt;&lt;/a&gt;&lt;center&gt;iOS内存泄露监测和修复&lt;center&gt;&lt;/center&gt;&lt;/center&gt;&lt;/h1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/04/13/hello-world/"/>
    <id>http://yoursite.com/2018/04/13/hello-world/</id>
    <published>2018-04-13T00:39:00.000Z</published>
    <updated>2018-04-13T08:03:09.285Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
